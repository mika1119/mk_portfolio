@property --p {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}

.circle-chart {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 4rem;
  @include display_sm {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    @include max_width;
  }
}

.circle-item {
  --size: 100%;
  --ring: #{$light_gray};
  --p: 0;
  width: var(--size);
  aspect-ratio: 1 / 1;
  position: relative;
  display: grid;
  place-items: center;
  &__meter {
    position: absolute;
    inset: 0;
    border-radius: 50%;
    background: conic-gradient(var(--color) calc(var(--p) * 1%), var(--ring) 0);
    -webkit-mask: radial-gradient(circle at 50% 50%, #0000 50%, #fff 50%);
            mask: radial-gradient(circle at 50% 50%, #0000 50%, #fff 50%);
  }
  &:not(.aos-animate) {
    & .circle-item__meter {
      --p: 0;
    }
  }
  &.aos-animate {
    & .circle-item__meter {
      animation: fill 1.6s ease forwards;
      animation-delay: var(--delay);
    }
  }
  &__percent {
    font-size: 3rem;
    font-weight: 700;
    color: var(--color);
    position: relative;
    pointer-events: none;
  }
  &__label {
    font-size: 1.4rem;
    color: $text_color;
    position: absolute;
    bottom: 26%;
    left: 50%;
    transform: translateX(-50%);
    pointer-events: none;
  }
}

@keyframes fill { to { --p: var(--val); } }